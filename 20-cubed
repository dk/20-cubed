#!env perl
use strict;
use warnings;
use Prima qw(Classes Application);

my $sleep = 20 * 60;
my $tick  = 20;

my $dbm = Prima::Image->new(
	width  => 100,
	height => 100,
	color => cl::White,
	backColor => cl::Black,
	type=> im::BW,
);
$dbm->begin_paint;
$dbm->clear;
$dbm->fill_ellipse( 50, 50, 100, 100 );
$dbm->end_paint;

my $gradient_mask = Prima::Image->new(
	width  => 100,
	height => 100,
	backColor => cl::Black,
);
$gradient_mask->begin_paint;
$gradient_mask->clear;
$gradient_mask->new_gradient( palette => [ cl::Black, cl::White ], poly => [0.2, 0.8, 0.3, 1] )->ellipse(50, 50, 100, 100);
$gradient_mask->end_paint;
$gradient_mask->type(im::Byte);

my $gradient = $dbm->dup;
$gradient->type(im::RGB);
$gradient->begin_paint;
$gradient->new_gradient( palette => [ cl::Gray, cl::White ] )->bar( 0, 0, $gradient->size );
$gradient->end_paint;
$gradient->premultiply_alpha( $gradient_mask );

while ( 1 ) {
	my $t;
	my $sec = $tick;
	$t = Prima::Widget->new(
		size   => [100, 100],
		origin => [ 0, $::application-> height - 100 ],
		font   => { height => 80 },
		shape  => $dbm,
		layered => 1,
		onPaint => sub {
			$t->put_image( 0, 0, $gradient);
			$t->draw_text($sec, 0, 0, $t->size, dt::Center|dt::VCenter);
			$t->put_image( 0, 0, $gradient_mask, rop::AlphaCopy );
		},
		onMouseDown => sub {
			$t-> destroy;
			$sec = 0;
		},
	);
	$t-> insert( Timer => 
		timeout => 1000,
		onTick  => sub {	
			--$sec ? $t->repaint : $t->destroy;
		},
	)->start;

	while ($sec > 0) {
		$::application->yield;
		select(undef,undef,undef,0.1);
	}
	sleep($sleep);
}

__DATA__

=pod

=head1 NAME

20 cubed

=head1 DESCRIPTION

This is a desktop version of chrome extension "20 cubed". When started, it will
remind you every 20 minutes to take 20 second break from your screen, looking
at an object 20 metres away.

=head1 AUTHOR

Dmitry Karasik
